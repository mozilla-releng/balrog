version: 1
policy:
  pullRequests: public
tasks:
  $let:
    # Github events have this stuff in different places...
    repo_url: {
      $if: 'tasks_for == "github-push"',
      then: '${event.repository.clone_url}',
      else: {
        $if: 'tasks_for == "github-pull-request"',
        then: '${event.pull_request.head.repo.clone_url}',
        # Assume release event
        else: '${event.repository.clone_url}',
      }
    }
    head_sha: {
      $if: 'tasks_for == "github-push"',
      then: '${event.after}',
      else: {
        $if: 'tasks_for == "github-pull-request"',
        then: '${event.pull_request.head.sha}',
        # Assume release event
        else: '${event.release.tag_name}',
      }
    }
    owner_email: {
      $if: 'tasks_for == "github-push"',
      then: '${event.pusher.email}',
      else: {
        $if: 'tasks_for == "github-pull-request"',
        then: '${event.pull_request.user.login}@users.noreply.github.com',
        # Assume release event
        else: '${event.sender.login}@users.noreply.github.com',
      }
    }
    docker_tags: {
      $if: 'tasks_for == "github-push"',
      then: 'latest ${event.after}',
      else: {
        $if: 'tasks_for == "github-release"',
        then: '${event.release.tag_name}',
        # Unused
        else: ''
      }
    }
    # jsone doesn't support shortcircuiting evaluation, and we need to use
    # ${event.release.tag_name} as part of a conditional for release event
    # tasks, so we need to create this variable to make sure it always
    # has a value instead of using ${event.release.tag_name} directly.
    release_tag: {
      $if: 'tasks_for == "github-release"',
      then: '${event.release.tag_name}',
      else: 'null',
    }
    branch: {
      $if: 'tasks_for == "github-push"',
      then: '${event.ref}',
      else: 'null',
    }
    pull_request_number: {
      $if: 'tasks_for == "github-pull-request"',
      then: '${event.number}',
      else: '',
    }
  in:
    $flattenDeep:
      - $if: '(tasks_for == "github-pull-request" && event["action"] in ["edited", "opened", "reopened", "synchronize"]) || (tasks_for == "github-push" && branch == "refs/heads/master")'
        then:
          - taskId: {$eval: as_slugid("backend-tests")}
            created: {$fromNow: ''}
            deadline: {$fromNow: '2 hours'}
            provisionerId: releng-t
            workerType: linux
            scopes:
              - secrets:get:repo:github.com/mozilla/balrog:coveralls
            routes: []
            payload:
              maxRunTime: 1200
              image: "python:3.7"
              env:
                # For Coveralls to function properly CIRCLECI and CI_PULL_REQUEST need to be set
                CIRCLECI: "1"
                CI_PULL_REQUEST: "${pull_request_number}"
                TOXENV: "check,py37"
              command:
                - "/bin/bash"
                - "-c"
                - >-
                  export COVERALLS_REPO_TOKEN=$(curl 'taskcluster/secrets/v1/secret/repo:github.com/mozilla/balrog:coveralls' | python -c 'import json, sys; a = json.load(sys.stdin); print(a["secret"]["repo_token"])') &&
                  git clone ${repo_url} balrog &&
                  cd balrog &&
                  git checkout ${head_sha} &&
                  pip install coveralls tox &&
                  tox &&
                  coveralls
              features:
                taskclusterProxy: true
            metadata:
              name: Balrog back-end tests
              description: Balrog Python tests
              owner: ${owner_email}
              source: ${repo_url}

          - taskId: {$eval: as_slugid("agent-tests")}
            created: {$fromNow: ''}
            deadline: {$fromNow: '2 hours'}
            provisionerId: releng-t
            workerType: linux
            scopes: []
            routes: []
            payload:
              maxRunTime: 1200
              image: "python:3.7"
              env:
                TOXENV: "check,py37"
              command:
                - "/bin/bash"
                - "-c"
                - "git clone ${repo_url} balrog && cd balrog && git checkout ${head_sha} && cd agent && pip install tox && tox"
            metadata:
              name: Balrog agent tests
              description: Balrog agent tests
              owner: ${owner_email}
              source: ${repo_url}

          - taskId: {$eval: as_slugid("client-tests-py37")}
            created: {$fromNow: ''}
            deadline: {$fromNow: '2 hours'}
            provisionerId: releng-t
            workerType: linux
            scopes: []
            routes: []
            payload:
              maxRunTime: 1200
              image: "python:3.7"
              env:
                TOXENV: "check,py37"
              command:
                - "/bin/bash"
                - "-c"
                - "git clone ${repo_url} balrog && cd balrog && git checkout ${head_sha} && cd client && pip install tox && tox"
            metadata:
              name: Balrog client tests
              description: Balrog client tests
              owner: ${owner_email}
              source: ${repo_url}

          - taskId: {$eval: as_slugid("agent-docker-build")}
            created: {$fromNow: ''}
            deadline: {$fromNow: '2 hours'}
            provisionerId: releng-t
            workerType: linux
            routes: []
            payload:
              maxRunTime: 3600
              image: "taskcluster/image_builder:0.1.3"
              command:
                - "/bin/bash"
                - "-c"
                - "git clone ${repo_url} balrog && cd balrog && git checkout ${head_sha} && cd agent && docker build ."
              features:
                dind: true
            metadata:
              name: Balrog agent docker build
              description: Balrog agent docker build
              owner: ${owner_email}
              source: ${repo_url}

          - taskId: {$eval: as_slugid("backend-docker-build")}
            created: {$fromNow: ''}
            deadline: {$fromNow: '2 hours'}
            provisionerId: releng-t
            workerType: linux
            routes: []
            payload:
              maxRunTime: 3600
              image: "taskcluster/image_builder:0.1.3"
              command:
                - "/bin/bash"
                - "-c"
                - "git clone ${repo_url} balrog && cd balrog && git checkout ${head_sha} && docker build ."
              features:
                dind: true
            metadata:
              name: Balrog backend docker build
              description: Balrog backend docker build
              owner: ${owner_email}
              source: ${repo_url}

          - taskId: {$eval: as_slugid("old-ui-tests")}
            created: {$fromNow: ''}
            deadline: {$fromNow: '2 hours'}
            provisionerId: releng-t
            workerType: linux
            scopes: []
            routes: []
            payload:
              maxRunTime: 1200
              image: "node:0.10"
              command:
                - "/bin/bash"
                - "-c"
                - "git clone ${repo_url} balrog && cd balrog && git checkout ${head_sha} && cd ui && npm install && npm test"
            metadata:
              name: Balrog frontend tests
              description: Balrog frontend tests
              owner: ${owner_email}
              source: ${repo_url}

          - taskId: {$eval: as_slugid("ui-tests")}
            created: {$fromNow: ''}
            deadline: {$fromNow: '2 hours'}
            provisionerId: releng-t
            workerType: linux
            scopes: []
            routes: []
            payload:
              maxRunTime: 1200
              image: "node:10"
              command:
                - "/bin/bash"
                - "-c"
                - "git clone ${repo_url} balrog && cd balrog && git checkout ${head_sha} && cd react-ui && yarn install && yarn lint && yarn test"
            metadata:
              name: Balrog react frontend tests
              description: Balrog react frontend tests
              owner: ${owner_email}
              source: ${repo_url}

          - taskId: {$eval: as_slugid("ui-build")}
            created: {$fromNow: ''}
            deadline: {$fromNow: '2 hours'}
            provisionerId: releng-t
            workerType: linux
            scopes: []
            routes: []
            payload:
              maxRunTime: 1200
              image: "node:10"
              command:
                - "/bin/bash"
                - "-c"
                - "git clone ${repo_url} balrog && cd balrog && git checkout ${head_sha} && cd react-ui && yarn install && yarn build"
            metadata:
              name: Balrog react frontend build
              description: Balrog react frontend build
              owner: ${owner_email}
              source: ${repo_url}

      - $if: 'tasks_for == "github-release"'
        then:
          - taskId: {$eval: as_slugid("agent-docker-image")}
            created: {$fromNow: ''}
            deadline: {$fromNow: '2 hours'}
            provisionerId: releng-3
            workerType: linux
            scopes:
              - secrets:get:repo:github.com/mozilla/balrog:dockerhub
            routes: []
            payload:
              maxRunTime: 3600
              image: "taskcluster/image_builder:0.1.3"
              command:
                - "/bin/bash"
                - "-c"
                - "git clone ${repo_url} balrog && cd balrog && git checkout ${head_sha} && cd agent && scripts/push-dockerimage.sh ${docker_tags}"
              features:
                dind: true
                taskclusterProxy: true
            metadata:
              name: Balrog agent docker build
              description: Balrog agent docker build
              owner: ${owner_email}
              source: ${repo_url}

          - taskId: {$eval: as_slugid("backend-docker-image")}
            created: {$fromNow: ''}
            deadline: {$fromNow: '2 hours'}
            provisionerId: releng-3
            workerType: linux
            scopes:
              - secrets:get:repo:github.com/mozilla/balrog:dockerhub
            routes: []
            payload:
              maxRunTime: 3600
              image: "taskcluster/image_builder:0.1.3"
              command:
                - "/bin/bash"
                - "-c"
                - "git clone ${repo_url} balrog && cd balrog && git checkout ${head_sha} && scripts/push-dockerimage.sh Dockerfile ${docker_tags}"
              features:
                dind: true
                taskclusterProxy: true
            metadata:
              name: Balrog backend docker build
              description: Balrog backend docker build
              owner: ${owner_email}
              source: ${repo_url}

      # Deploy the UI to stage whenever we create a versioned release tag
      - $if: 'tasks_for == "github-release" && release_tag[0] == "v"'
        then:
          - taskId: {$eval: as_slugid("stage-ui-deploy")}
            created: {$fromNow: ''}
            deadline: {$fromNow: '2 hours'}
            provisionerId: releng-3
            workerType: linux
            scopes:
              - secrets:get:repo:github.com/mozilla/balrog:s3-stage-aws-creds
              - secrets:get:repo:github.com/mozilla/balrog:s3-stage-app-config
            routes: []
            payload:
              env:
                AWS_CREDENTIALS_SECRET: http://taskcluster/secrets/v1/secret/repo:github.com/mozilla/balrog:s3-stage-aws-creds
                APP_CONFIG_SECRET: http://taskcluster/secrets/v1/secret/repo:github.com/mozilla/balrog:s3-stage-app-config
                WEBSITE_BUCKET: balrog-stage-balrog-static-admin-stage-static-website
              maxRunTime: 3600
              image: "node:10"
              command:
                - "/bin/bash"
                - "-c"
                - "apt-get -q --yes update && apt-get -q --yes install awscli && git clone ${repo_url} balrog && cd balrog && git checkout ${head_sha} && cd react-ui && yarn install && bash ./scripts/deploy"
              features:
                taskclusterProxy: true
            metadata:
              name: Balrog stage ui deploy
              description: Balrog stage ui deploy
              owner: ${owner_email}
              source: ${repo_url}

      # Deploy to production only for a specific tag
      - $if: 'tasks_for == "github-release" && release_tag == "production-ui"'
        then:
          - taskId: {$eval: as_slugid("prod-ui-deploy")}
            created: {$fromNow: ''}
            deadline: {$fromNow: '2 hours'}
            provisionerId: releng-3
            workerType: linux
            scopes:
              - secrets:get:repo:github.com/mozilla/balrog:s3-prod-aws-creds
              - secrets:get:repo:github.com/mozilla/balrog:s3-prod-app-config
            routes: []
            payload:
              env:
                AWS_CREDENTIALS_SECRET: http://taskcluster/secrets/v1/secret/repo:github.com/mozilla/balrog:s3-prod-aws-creds
                APP_CONFIG_SECRET: http://taskcluster/secrets/v1/secret/repo:github.com/mozilla/balrog:s3-prod-app-config
                WEBSITE_BUCKET: balrog-prod-balrog-static-admin-prod-static-website
              maxRunTime: 3600
              image: "node:10"
              command:
                - "/bin/bash"
                - "-c"
                - "apt-get -q --yes update && apt-get -q --yes install awscli && git clone ${repo_url} balrog && cd balrog && git checkout ${head_sha} && cd react-ui && yarn install && bash ./scripts/deploy"
              features:
                taskclusterProxy: true
            metadata:
              name: Balrog prod ui deploy
              description: Balrog prod ui deploy
              owner: ${owner_email}
              source: ${repo_url}

[uwsgi]
http = :$(PORT)

# Mount the admin app at /
mount = /=/app/uwsgi/admin.wsgi
# Rewrite PATH_INFO & SCRIPT_NAME to match mountpoint (so the app sees paths like /foo instead of /api/foo)
manage-script-name = 1

# Check /app/ui/{generated,dist} for static file
# generated contains non-minified versions, which are preferable
# during local development
if-env = LOCALDEV
check-static = /app/ui/generated
endif =
if-not-env = LOCALDEV
check-static = /app/ui/dist
endif =
# Serve index.html when / is requested
static-index = index.html

# Because the Angular app and the WSGI app are both hosted at /, we need to
# set-up some fancy routing to cope. Specifically, we need to take any URIs
# that should be for the admin app, and direct them there. These are:
# Anything coming in to /api, which also needs to be stripped away before
# the app can handle it.
route-uri = ^/api/(.*)$ rewrite:/$1
route-uri = ^/api/(.*)$ continue:
# Anything starting with __, which are special Dockerflow endpoints
# (see https://github.com/mozilla-services/Dockerflow)
route-if = startswith:${REQUEST_URI};/__ continue:

# For other paths, if the file doesn't exist on disk, serve index.html in its place.
# PATH_INFO will have the original path still, so Angular will see which page is actually requested.
if-env = LOCALDEV
route-if-not = exists:/app/ui/generated${PATH_INFO} static:/app/ui/generated/index.html
endif =
if-not-env = LOCALDEV
route-if-not = exists:/app/ui/dist${PATH_INFO} static:/app/ui/dist/index.html
endif =

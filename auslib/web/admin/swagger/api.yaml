swagger: '2.0'
info:
  version: '2.28'
  title: "Balrog's Admin API"
  termsOfService: "https://wiki.mozilla.org/Balrog"
  license:
    name: "Mozilla Public License 2.0"
    url: "https://www.mozilla.org/en-US/MPL/2.0/"
  contact:
    name: "Mozilla Release Engineering"
    url: "https://github.com/mozilla/balrog"
    email: "release-engineering@lists.mozilla.org"
  description: "Mozilla's Update Server. APIs for Balrog" #TODO write in detail using Github Flavored Markdown

schemes:
  - http
  - https
security:
  - basic: []
securityDefinitions:
  basic:
    type: basic
    description: HTTP basic access authentication

tags:
  - name: "Rules"
    description: "Balrog Rules Description."
    externalDocs:
      description: "Find out more about Rules"
      url: "http://mozilla-balrog.readthedocs.io/en/latest/database.html#rules"

  - name: "Users"
    description: "Data about Users"
    externalDocs:
      description: "Find out more about users"
      url: "http://mozilla-balrog.readthedocs.io/en/latest/database.html#users"

  - name: "CSRF Token"
    description: "CSRF Token Description"
    externalDocs:
      description: "Find out more about CSRF-Token"
      url: "http://mozilla-balrog.readthedocs.io/en/latest/admin_api.html#csrf-token"

# basePath: "/api"
# host: "localhost:8080"
# Swagger-UI bug : fix TODO week 13

paths:
  /csrf_token:
    get:
      summary: Returns valid csrf_token in response header.
      description: Returns an empty response with a valid CSRF token in the X-CSRF-Token header.
      tags:
        - "CSRF Token"
      operationId: auslib.web.admin.views.mapper.csrf_get
      consumes: []
      produces:
        - text/html
      deprecated: false
      responses:
        '200':
          description: Generate csrf token
          headers:
            X-CSRF-Token:
              description: token
              type: string

  /users:
    get:
      summary: Returns all of Users in Balrog's DB
      description: Returns all of the Rules in Balrog’s database inside of a JSON Object.
      tags:
        - Users
      operationId: auslib.web.admin.views.mapper.users_get
      consumes: []
      produces:
        - application/json
      deprecated: false
      responses:
        '200':
          description: Get all Users
          schema:
            type: object
            properties:
              users:
                description: array of users
                type: array
                items:
                  type: string
                  minItems: 0
                example: ["balrogadmin"]
  /rules:
    get:
      summary: Returns filtered list of Rules in Balrog's DB
      description: "Returns filtered list Rules in Balrog’s database
      inside of a JSON Object. Returns all rules if 'product' query parameter isn't passed"
      tags:
        - Rules
      operationId: auslib.web.admin.views.mapper.rules_get
      parameters:
        - name: product
          in: query
          description: Name of the product to filter the rules against.
          type: string
          x-nullable: true
          required: false
      produces: [application/json]
      deprecated: false
      responses:
        '200':
          description: Get all Rules
          schema:
            type: object
            required:
              - count
              - rules
            properties:
              count:
                description: count of total rules fetched
                type: integer
                format: int32
                example: 1
              rules:
                description: array where each element is a rule object
                type: array
                items:
                  $ref: '#/definitions/RulesBaseGET'
                example:
                  - alias: "esr45-localtest"
                    backgroundRate: 100
                    buildID: null
                    buildTarget: null
                    channel: "esr-localtest"
                    comment: "esr45 esr-localtest rule"
                    data_version: 22
                    distVersion: null
                    distribution: null
                    fallbackMapping: null
                    headerArchitecture: null
                    locale: null
                    mapping: "Firefox-45.7.0esr-build1"
                    osVersion: null
                    priority: 43
                    product: "Firefox"
                    rule_id: 308
                    systemCapabilities: null
                    update_type: "minor"
                    version: null
                    whitelist: null
    post:
      tags:
        - Rules
      summary: creates a Rule
      description: creates a new Rule in Balrog's DB
      consumes:
        - application/json
      produces:
        - text/html
        - application/json
      deprecated: false
      operationId: auslib.web.admin.views.mapper.rules_post
      parameters:
        - name: rule
          in: body
          description: New Rule object data
          required: true
          schema:
            allOf:
              - $ref: '#/definitions/CSRFModel'
              - $ref: '#/definitions/RulesBase'

            #If you change the order, make sure to modify test cases too.
            required:
              - backgroundRate
              - priority

      responses:
        '200':
          description: Created a new rule
          schema:
            type: integer
            example: 514
        '400':
          description: Bad Request. Invalid POST request.
          schema:
            $ref: '#/definitions/BadRequestResponseModel'
        default:
          description: Requires remote username and password in basic authentication
          examples:
            text/html: "Error: REMOTE_USERNAME required"


definitions:

  BadRequestResponseModel:
    title: "Invalid Request's Response object"
    description: "Invalid Request's Response JSON Object."
    type: object
    # currently we're using detail and status only in the UI
    # Therefore rest of fields aren't always required.
    required:
      - detail
      - status
    properties:
      detail:
        description: An human readable explanation specific to this occurrence of the problem.
        type: string
        example: "field_name is a required property"
      status:
        description: The HTTP status code generated by the origin server for this occurrence of the problem.
        type: integer
        format: int32
        enum: [400]
        example: 400
      title:
        description: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localisation.
        type: string
        example: "Bad Request"
      type:
        description: "An absolute URI that identifies the problem type.  When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g., using HTML).When this member is not present its value is assumed to be 'about:blank'"
        type: string
        example: "about:blank"

  CSRFModel:
    title: CSRF Token
    description: CSRF Token in POST
    type: object
    required:
      - csrf_token
    properties:
      csrf_token:
        type: string
        example: "1491342563##c4e6fef0b978e6c89af9ff1015e67b9ca7c45d14"

  RulesBaseGET:
    title: GET Operations on Rules Base
    description: "Sample description for /rules GET"
    allOf:
      - $ref: "#/definitions/RulesBase"
    required:
      - alias
      - backgroundRate
      - buildID
      - buildTarget
      - channel
      - comment
      - data_version
      - distVersion
      - distribution
      - fallbackMapping
      - headerArchitecture
      - locale
      - mapping
      - osVersion
      - priority
      - product
      - rule_id
      - systemCapabilities
      - update_type
      - version

  RulesBase:
    title: Rules object definition
    description: Balrog's Rule Attributes
    type: object
    required:
      - update_type # Required during both POSTing and GET(fetch) Operations

    # Cannot have additionalProperties as false for strict validation ,else it disallows csrf_token or any other model's properties to be added
    #additionalProperties: false

    properties:
      rule_id:
        description: The id of the rule. This id is necessary to make changes to the rule through the REST API.
        type: integer
        format: int32
        readOnly: true
        example: 10

      priority:
        description: The priority of the rule, relative to other rules. If multiple rules match an incoming request based on the Matchable columns, the rule with the highest priority is chosen.
        type: ["integer", "string", "null"]
        format: priority
        example: 1

      mapping:
        description: The Release to construct an update out of if the user is on the right side of a background rate dice roll, or if the background rate is 100. This is a foreign key to the "name" column of the Releases table.
        type: ["string", "null"]
        minLength: 0
        maxLength: 100
        example: No-Update

      backgroundRate:
        description: The percentage of background update requests that if specified. Generally, this is used as a throttle to increase or decrease the rate at which the majority of users receive the latest update.
        type: ["integer", "string", "null"]
        format: backgroundRate
        example: 100

      update_type:
        description: "The update_type to use in the XML response. It's very rare for a rule to use anything other than 'minor' these days."
        type: string
        minLength: 0
        maxLength: 15
        enum: [ "major", "minor"]
        example: minor

      product:
        description: The name of the application requesting an update.
        type: ["string", "null"]
        minLength: 0
        maxLength: 15
        example: Firefox

      version:
        description: The version of the application requesting an update.
        type: ["string", "null"]
        format: version
        minLength: 0
        maxLength: 75
        example: '36.0'

      channel:
        description: The update channel of the application request an update.
        type: ["string", "null"]
        minLength: 0
        maxLength: 75
        example: beta

      buildTarget:
        description: "The 'build target' of the application requesting an update. This is usually related to the target platform the app was built for."
        type: ["string", "null"]
        minLength: 0
        maxLength: 75
        example: Darwin_x86_64-gcc3-u-i386-x86_64

      buildID:
        description: The build ID of the application requesting an update.
        type: ["string", "null"]
        format: buildID
        minLength: 0
        maxLength: 20
        example: '201410010830'

      locale:
        description: The locale of the application requesting an update.
        type: ["string", "null"]
        minLength: 0
        maxLength: 200
        example: de

      osVersion:
        description: The OS Version of the application requesting an update. This field is primarily used to point desupported operating systems to their last supported build.
        type: ["string", "null"]
        minLength: 0
        maxLength: 1000
        example: 'Windows_NT 5.0'

      distribution:
        description: The partner distribution name of the application requesting an update or “default” if the application is not a partner build.
        type: ["string", "null"]
        minLength: 0
        maxLength: 100
        example: default

      distVersion:
        description: The version of the partner distribution of the application requesting an update or “default” if the application is not a partner build.
        type: ["string", "null"]
        minLength: 0
        maxLength: 100
        example: '1.19'

      headerArchitecture:
        description: The architecture of the OS of the client as guessed based on build target. This field is mostly deprecated now that this information is included in the build target.
        type: ["string", "null"]
        minLength: 0
        maxLength: 10
        example: 'PPC'

      data_version:
        description: the version number of rule
        type: integer
        format: int32
        readOnly: true
        minimum: 1
        example: 1

      comment:
        description: A string describing the purpose of the rule. Not always necessary for obvious rules.
        type: ["string", "null"]
        minLength: 0
        maxLength: 500
        example: lorem ipso facto

      alias:
        description: The id of the rule. This id is necessary to make changes to the rule through the REST API.
        type: ["string", "null"]
        minLength: 0
        maxLength: 50
        pattern: "(^[a-zA-Z][a-zA-Z0-9-]*$|^$)"
        example: 'firefox-nightly'

      systemCapabilities:
        description: The supported hardware features of the application requesting an update. This field is primarily used to point desupported users based on their hardware. Example - users who do not support SSE2
        type: ["string", "null"]
        minLength: 0
        maxLength: 1000
        example: 'SSE'

      fallbackMapping:
        description: The Release to construct an update out of when the user is on the wrong side of a background rate dice roll. This is a foreign key to the “name” column of the Releases table.
        type: ["string", "null"]
        minLength: 0
        maxLength: 100
        example: null

    #Warning: Do NOT add an example object here. Inteferes with Example Value during
    # request generation in Swagger-UI

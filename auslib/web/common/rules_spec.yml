paths:
  /api/v1/rules:
    get:
      operationId: 'auslib.web.common.rules.get_rules'
      description: Returns all of the Rules in Balrog’s database inside of a JSON Object.
      produces: 
        - application/json
      parameters:
        - $ref: '#/parameters/productQuery'
      responses:
        200:
          description: The number of matched rules and a rules list.
          schema:
            $ref: '#/definitions/RulesWrapper'

  /api/v1/rules/{id_or_alias}:
    get:
      operationId: 'auslib.web.common.rules.get_rule'
      description: Returns the entire rule identified by the id or alias given in JSON format.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/idOrAlias'
      responses:
        200:
          description: Rule object.
          schema:
            $ref: '#/definitions/Rule'
          headers:
            X-Data-Version:
              description: The version of returned data.
              type: integer
        404:
          description: Requested rule does not exist.

  /api/v1/rules/{id_or_alias}/revisions:
    get:
      operationId: 'auslib.web.common.rules.get_rule_history'
      description: Returns previous versions of the rule identified by the id or alias given in a JSON Object.
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/idOrAlias'
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: The number of versions and a list of versions.
          schema:
            $ref: '#/definitions/RuleHistoryWrapper'
        400:
          description: Bad input.

definitions:
  Rule:
    type: object
    required:
      - rule_id
      - update_type
      - backgroundRate
      - priority
    properties:
      rule_id:
        type: integer
        format: int32
        description: The id of the rule. This id (or the rule's alias, if set) is necessary to make changes to the rule through the REST API.
      alias:
        type: string
        description: The alias of the rule. This value must be unique across the entire set of rules.
      priority:
        type: integer
        format: int32
        description: >
          The priority of the rule, relative to other rules. The higher the value, the higher the priority of the rule.
      mapping:
        type: string
        description: The Release to construct an update out of if the user is on the right side of a background rate dice roll, or if the background rate is 100. This is a foreign key to the "name" column of the Releases table.
      fallbackMapping:
        type: string
        description: The Release to construct an update out of when the user is on the wrong side of a background rate dice roll. This is a foreign key to the "name" column of the Releases table.
      backgroundRate:
        type: integer
        format: int32
        description: >
          The percentage of background update requests to serve the "mapping" to.
          Generally, this is used as a throttle to increase or decrease the number of clients which receive new updates.
      update_type:
        type: string
        description: The update_type to use in the XML response. "minor" is almost always the correct value these days.
      product:
        type: string
        description: The product name that the client must send in order for the rule to match. Only full string matches are supported.
      version:
        type: string
        description: >
          The version requirements that the client must meet in order for the rule to match. Exact matches, comma separated lists (eg: "36.0,36.0.1") and comparisons (eg: "<45.0") are allowed.
      channel:
        type: string
        description: The update channel that the client must send in order for the rule to match. "*" can be used to glob at the end of the channel name.
      buildTarget:
        type: string
        description: The “build target” that the client must send in order for the rule to match. This is usually related to the target platform the app was built for. Only full string matches are supported.
      buildID:
        type: string
        description: The build ID requirements that the client must meet in order for the rule to match. Comparisons such as "<20170504030201" may be used.
      locale:
        type: string
        description: The locale that the client must send in order for the rule to match. A comma separated list may be used to list multiple locales.
      osVersion:
        type: string
        description: >
          The OS Version requirements that the client must meet in order for the rule to match. && may be used to match multiple substrings at once (eg: "Windows && (websense-"). Commas may be used to match any of a list of substrings.
      instructionSet:
        type: string
        description: >
          The most modern CPU instruction set that the client must support in order for the rule to match. A comma separated list may be used to list multiple instruction sets.
      memory:
        type: string
        description: The amount of RAM, in megabytes, that the client must have for the rule to match. Comparisons such as "<8000" may be used.
      distribution:
        type: string
        description: The partner distribution name that the application must send in order for the rule to match.
      distVersion:
        type: string
        description: The version of the partner distribution that the application must send in order for the rule to match.
      headerArchitecture:
        type: string
        description: The client architecture (as guessed based on the User Agent) that the client must provide in order for the rule to match. This field is deprecated in favour of build target.
      comment:
        type: string
        description: A string describing the purpose of the rule. Not always necessary for obvious rules.

  RuleHistory:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
    required:
      - change_id
      - changed_by
      - timestamp
    properties:
      change_id:
        type: integer
        format: int32
        description: Change Id.
      changed_by:
        type: string
        description: User that made the change.
      timestamp:
        type: integer
        format: int64
        description: Time that the change was made.

  RulesWrapper:
    type: object
    required:
      - count
      - rules
    properties:
      count:
        type: integer
        format: int32
        description: Number of matched rules.
      rules:
        type: array
        description: List of rules.
        items:
          $ref: '#/definitions/Rule'

  RuleHistoryWrapper:
    type: object
    required:
      - count
      - rules
    properties:
      count:
        type: integer
        format: int32
        description: Number of matched versions.
      rules:
        description: List of rules versions.
        items:
          $ref: '#/definitions/RuleHistory'

parameters:
  idOrAlias:
    name: id_or_alias
    description: Rule id or alias.
    in: path
    required: true
    type: string

parameters:
  productParam:
    name: product
    in: query
    description: Name of the product to filter the rules/releases against.
    type: string
    x-nullable: true
    required: false

  releaseParam:
    name: release
    in: path
    description: release name
    type: string
    maxLength: 100
    required: true
  
  pretty:
    name: pretty
    in: query
    description: "If 'pretty' is present in the query string and set to true, it will be pretty formatted."
    type: string
    x-nullable: true
    required: false

  pageParam:
    name: page
    in: query
    description: Variable value used pagination of response revisions.
    type: integer
    minimum: 1
    x-nullable: true
    required: false

  limitParam:
    name: limit
    in: query
    description: Variable value used for calculating offset for pagination.
    type: integer
    minimum: 1
    x-nullable: true
    required: false

  platformParam:
    name: platform
    in: path
    description: platform name
    type: string
    required: true

  localeParam:
    name: locale
    in: path
    description: locale identifier
    type: string
    required: true

definitions:
  4xxClientErrorResponseModel:
    title: "4xx Response"
    description: "Invalid request's response object. The 4xx class of status codes is intended for situations in which the client seems to have erred. This model describes the response format"
    type: object
    # currently we're using 'detail' and 'status' in the UI.
    # 'exception' is seldom used. Therefore rest of fields aren't always required.
    required:
      - detail
      - status
      - title
    properties:
      detail:
        description: An human readable explanation specific to this occurrence of the problem.
        type: string
        example: "field_name is a required property"
      exception:
        description: An human readable explanation specific to this occurrence of the problem. Same as detail. Used in some UI forms.
        type: string
        example: "field_name is missing"
      status:
        description: The HTTP status code generated by the origin server for this occurrence of the problem.
        type: integer
        format: int32
        minimum: 400
        maximum: 499
        example: 400
      title:
        description: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localisation.
        type: string
        example: "Bad Request"
      type:
        description: "An absolute URI that identifies the problem type.  When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g., using HTML).When this member is not present its value is assumed to be 'about:blank'"
        type: string
        example: "about:blank"

  CountModel:
    title: Count
    description: count of total objects/elements fetched
    type: object
    required:
      - count
    properties:
      count:
        description: count of total values fetched from DB
        type: integer
        minimum: 0
        format: int32
        example: 1

  DataVersionModel:
    title: Data Version
    description: "model to re-use 'data_version' field."
    type: object
    properties:
      data_version:
        description: version number of object
        type: integer
        format: int32
        minimum: 1
        example: 3

  HistoryModel:
    title: History Table Model
    description: Contains fields to be added to base table models to generate a history table
    type: object
    required:
      - timestamp
      - change_id
      - changed_by
    properties:
      timestamp:
        type: integer
        minimum: 0
        example: 1495308
      change_id:
        type: integer
        minimum: 0
        example: 10
      changed_by:
        type: string
        minimum: 1
        maximum: 100
        example: "balrogadmin"

  ProductModel:
    title: Product
    description: "model to define 'product' field in request/response JSON body"
    type: object
    properties:
      product:
        description: The product name that the client must send in order for the rule to match. Only full string matches are supported.
        type: string
        minLength: 1
        maxLength: 15
        example: Firefox

  ReleaseName:
    title: Release Name
    description: name of release
    type: object
    properties:
      name:
        description: Release name
        type: string
        minLength: 1
        maxLength: 100
        example: "Firefox-47.0.2-build2-43.0.1"

  ReleaseReadOnly:
    title: Release Read Only
    description: "Release's read_only flag field marks whether release can only be read and not modified"
    type: object
    properties:
      read_only:
        type: ["boolean", "null"]
        example: true
        description: "flag value is true if release is marked as read_only else release is modifiable"

  ReleaseGET:
    title: Release form values plus read only and rule ids
    description: "Release Base Model + read only + list of mapped rule_ids"
    type: object
    allOf:
      - $ref: '#/definitions/DataVersionModel'
      - $ref: '#/definitions/ProductModel'
      - $ref: '#/definitions/ReleaseName'
      - $ref: '#/definitions/ReleaseReadOnly'
      - type: object
        properties:
          rule_ids:
            description: list of rule_ids
            type: array
            uniqueItems: true
            minItems: 0
            items:
              type: integer
              minimum: 0
            example: [487, 589]
    required:
      - name
      - product
      - data_version
      - read_only
      - rule_ids

responses:
  invalidFormData:
    description: Error in form data
    schema:
      $ref: '#/definitions/4xxClientErrorResponseModel'
    examples:
      application/json:
        detail: "Invalid field value"
        status: 400

  unauthorizedUser:
    description: Not authorized to access resource
    schema:
      $ref: "#/definitions/4xxClientErrorResponseModel"
    examples:
      application/json:
        detail: "You are not authorized to access this resource"
        status: 403

  resourceNotFound:
    description: Resource Not Found
    schema:
      $ref: "#/definitions/4xxClientErrorResponseModel"
    examples:
      application/json:
        detail: "Requested resource was not found"
        status: 404

  releaseDataResponse:
    description: Returns release object data
    schema:
      type: object
    headers:
      X-Data-Version:
        description: data version of the release
        type: integer
        format: int32
        minimum: 1

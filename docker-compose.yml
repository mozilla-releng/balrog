# Some people have reported problems with the balrogui API proxy not working correctly.
# This appears to be the same problem reported in https://github.com/docker/compose/issues/2172,
# and seems to only occur with certain (older) versions of docker-compose.
version: '2.1'
services:
  balrogadmin:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      balrogdb:
        condition: service_healthy
    entrypoint:
      - bash
      - scripts/initdb_and_run.sh
    command: admin-dev
    expose:
      - "7070"
    volumes:
      - .:/app
    links:
      - balrogdb
    environment:
      - DBURI=mysql://balrogadmin:balrogadmin@balrogdb/balrog
      - SECRET_KEY=blahblah
      - PORT=7070
      - LOG_FORMAT=plain
      - LOG_LEVEL=WARNING
      # Grab mail information from the local environment
      - SMTP_HOST
      - SMTP_PORT
      - SMTP_USERNAME
      - SMTP_PASSWORD
      - SMTP_TLS
      - NOTIFY_TO_ADDR
      - NOTIFY_FROM_ADDR
      - STAGING
    healthcheck:
        test: nc -z -v balrogadmin 7070
        interval: 5s
        timeout: 30s
        retries: 50


  balrogpub:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      balrogdb:
        condition: service_healthy
    command: public
    ports:
      - "9090:9090"
    volumes:
      - .:/app
    environment:
      - DBURI=mysql://balrogadmin:balrogadmin@balrogdb/balrog
      - SECRET_KEY=blahblah
      - PORT=9090
      - LOG_FORMAT=plain
      - LOG_LEVEL=WARNING
    links:
      - balrogdb


  balrogagent:
    build: ./agent
    depends_on:
      balrogadmin:
        condition: service_healthy
    volumes:
      - ./agent:/app
    links:
      - balrogadmin
    environment:
      - BALROG_API_ROOT=http://balrogadmin:7070/api
      - BALROG_USERNAME=balrogadmin
      - BALROG_PASSWORD=balrogadmin
      - TELEMETRY_API_ROOT=abc
      - LOG_FORMAT=plain
      - LOG_LEVEL=WARNING


  balrogui:
    image: node:0.10
    depends_on:
      balrogadmin:
        condition: service_healthy
    ports:
      - "8080:8080"
    links:
      - balrogadmin
    volumes:
      - ./ui:/app
      - .cache:/cache
    environment:
      - WEB_PORT=8080
    entrypoint:
      - /bin/bash
      - /app/docker-entrypoint.sh


  balrogdb:
    build:
      context: .
      dockerfile: Dockerfile.database
    expose:
      - "3306"
    environment:
      - MYSQL_DATABASE=balrog
      - MYSQL_USER=balrogadmin
      - MYSQL_PASSWORD=balrogadmin
      - MYSQL_ROOT_PASSWORD=admin
    volumes:
      - .cache/mysql:/var/lib/mysql
    healthcheck:
        test: nc -z -v balrogdb 3306
        interval: 30s
        timeout: 30s
        retries: 10
